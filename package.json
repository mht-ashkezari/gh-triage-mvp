{
  "name": "gh-triage-mvp",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "predocs:typedoc": "pnpm -w --filter @ghtriage/schemas build",
    "docs:openapi": "pnpm --filter @ghtriage/contracts openapi",
    "docs:redoc": "mkdir -p docs/api && redocly build-docs docs/openapi/bff.openapi.json --config redocly.yaml -o docs/api/bff.html && redocly build-docs docs/openapi/runs.openapi.json --config redocly.yaml -o docs/api/runs.html",
    "docs:typedoc": "typedoc",
    "docs:api": "pnpm docs:openapi && pnpm docs:redoc && pnpm docs:typedoc",
    "docs:lint": "markdownlint -c .markdownlint.jsonc \"**/*.md\" \"!**/node_modules/**\" \"!docs/api/**\"",
    "docs:spell": "cspell --no-progress --show-suggestions --config ./cspell.json \"**/*.md\" \"**/*.ts\" \"!**/node_modules/**\" \"!docs/api/**\"",
    "docs:zip": "rm -f site-docs.zip && (cd docs/api && zip -r ../site-docs.zip . || true) && test -f docs/site-docs.zip && echo 'site-docs.zip ready at docs/site-docs.zip'",
    "docs:bundle": "mkdir -p docs/api && pnpm -s docs:api && pnpm -s docs:zip",
    "docs": "pnpm docs:bundle",
    "kpi:md": "node tooling/print-kpis.mjs",
    "kpi:check": "tsx --tsconfig tooling/tsconfig.tooling.json tooling/validate-kpis.ts docs/kpis.yaml packages/schemas/kpis.schema.json",
    "test:kpi": "vitest run --config vitest.ci.config.ts",
    "schema:kpi": "pnpm -w --filter @ghtriage/schemas build",
    "ci:kpi": "pnpm schema:kpi && pnpm kpi:check",
    "score": "ghtriage repos score",
    "score:args": "ghtriage repos score",
    "build:datasets": "pnpm -w --filter @ghtriage/schemas build && pnpm -w --filter @ghtriage/tools-snapshot build",
    "check:manifest": "node tooling/data/snapshot/manifest-check.cjs datasets/snapshots/manifest.yaml",
    "snapshot": "pnpm run build:datasets && node apps/tools/snapshot/dist/cli.js datasets/snapshots/manifest.yaml",
    "guard:samples": "node tooling/data/snapshot/guard-samples.mjs",
    "guard:raw": "bash -lc \"! git ls-files | grep -E '^datasets/snapshots/.+?/raw/' || (echo 'raw/ tracked'; exit 1)\"",
    "test:selacc": "pnpm -s run test:selacc:unit && pnpm -s run test:selacc:e2e",
    "test:selacc:watch": "vitest --config vitest.ci.config.ts --watch tests/selacc*.spec.ts",
    "test:selacc:unit": "vitest run --config vitest.ci.config.ts --project root tests/selacc.access.spec.ts tests/selacc.selection.spec.ts",
    "test:selacc:e2e": "SELACC_APP_MODULE_PATH=apps/bff/src/app.module GITHUB_WEBHOOK_SECRET=testsecret vitest run --config vitest.ci.config.ts --project root --include tests/selacc.webhook.e2e.spec.ts",
    "test:docs": "pnpm diagrams:build && pnpm diagrams:check",
    "diagrams:build": "bash tooling/render_diagrams.sh",
    "diagrams:check": "tsx tooling/check_component_ids.ts",
    "diagrams:watch": "nodemon --ext mmd --watch docs/arch/releases --exec \"pnpm diagrams:build && pnpm diagrams:check\"",
    "repo:layout:check": "node tooling/ci/check-layout.cjs",
    "repo:tree": "node tooling/ci/print-tree.cjs",
    "build": "turbo run build --filter=...[origin/main] || turbo run build",
    "test": "turbo run test --filter=...[origin/main]",
    "lint": "turbo run lint",
    "typecheck": "turbo run typecheck",
    "dev": "turbo run dev --parallel",
    "contracts:openapi": "pnpm --filter @ghtriage/contracts openapi",
    "contracts:jsonschema": "pnpm --filter @ghtriage/contracts jsonschema",
    "contracts:lint": "redocly lint --config redocly.yaml docs/openapi/bff.openapi.json && redocly lint --config redocly.yaml docs/openapi/runs.openapi.json",
    "contracts:all": "pnpm contracts:openapi && pnpm contracts:jsonschema && pnpm contracts:lint",
    "test:contracts": "vitest run --project schemas --project contracts",
    "smoke:clients": "tsx --tsconfig tooling/tsconfig.tooling.json tooling/dev/clients.smoke.ts",
    "devstack:up": "docker compose -f infra/docker/docker-compose.dev.yml up -d --no-build postgres redis azurite otel-collector jaeger",
    "devstack:up:all": "docker compose -f infra/docker/docker-compose.dev.yml --profile cosmos --profile vector --profile llm up -d",
    "devstack:down": "docker compose -f infra/docker/docker-compose.dev.yml down -v",
    "devstack:ps": "docker compose -f infra/docker/docker-compose.dev.yml ps",
    "devstack:migrate": "docker network inspect gh-triage-dev_devnet >/dev/null 2>&1 || docker compose -f infra/docker/docker-compose.dev.yml up -d --no-build postgres && docker run --rm --network gh-triage-dev_devnet -v $(pwd)/infra/migrations:/flyway/sql flyway/flyway -url=jdbc:postgresql://postgres:5432/triage -user=postgres -password=devpass migrate",
    "ci:test": "cross-env DOTENV_CONFIG_QUIET=true vitest run --coverage --config vitest.ci.config.ts",
    "test:coverage": "vitest run --coverage",
    "test:all": "vitest run --config vitest.full.config.ts",
    "test:bff:devstack": "vitest run --config vitest.full.config.ts apps/bff/test/devstack.spec.ts",
    "devstack:test": "pnpm devstack:up && wait-port 127.0.0.1:5432 && wait-port 127.0.0.1:6379 && cross-env DOTENV_CONFIG_QUIET=true DEVSTACK=1 vitest run --config vitest.full.config.ts apps/bff/test/devstack.spec.ts; code=$?; pnpm devstack:down; exit $code",
    "test:local:all": "pnpm ci:test && pnpm devstack:test",
    "new:adr": "node tooling/dev/new-adr.mjs",
    "precontracts:openapi": "pnpm -w --filter @ghtriage/schemas build",
    "precontracts:jsonschema": "pnpm -w --filter @ghtriage/schemas build",
    "predocs:api": "pnpm -w --filter @ghtriage/schemas build",
    "docs:server": "http-server docs/api -p 8088 -c-1"
  },
  "keywords": [],
  "author": "",
  "license": "MIT",
  "packageManager": "pnpm@9.12.0",
  "pnpm": {
    "overrides": {
      "ws": "^8.17.1",
      "tar-fs": "^2.1.4"
    }
  },
  "devDependencies": {
    "@ghtriage/cli": "workspace:*",
    "@ghtriage/clients": "workspace:*",
    "@ghtriage/contracts": "workspace:^",
    "@mermaid-js/mermaid-cli": "^10.7.0",
    "@nestjs/testing": "^11.1.6",
    "@octokit/plugin-paginate-rest": "^13.1.1",
    "@octokit/rest": "^22.0.0",
    "@redocly/cli": "^2.5.1",
    "@types/express": "^4.17.21",
    "@types/ioredis": "^5.0.0",
    "@types/node": "^24.5.1",
    "@types/pg": "^8.15.5",
    "@vitest/coverage-v8": "3.2.4",
    "ajv": "^8.17.1",
    "cross-env": "^10.1.0",
    "cspell": "^8.14.2",
    "csv-writer": "^1.6.0",
    "eslint": "^9.35.0",
    "eslint-plugin-jsdoc": "^58.1.1",
    "eslint-plugin-tsdoc": "^0.4.0",
    "http-server": "14.1.1",
    "js-yaml": "^4.1.0",
    "markdownlint-cli": "^0.41.0",
    "nock": "^14.0.10",
    "nodemon": "^3.0.0",
    "p-limit": "^7.1.1",
    "prettier": "^3.6.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "rimraf": "^6.0.1",
    "supertest": "^7.1.4",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.5",
    "turbo": "^2.0.5",
    "typedoc": "^0.28.13",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.46.1",
    "vitest": "^3.2.4",
    "wait-port": "^1.1.0",
    "yaml": "^2.8.1",
    "zod-to-json-schema": "^3.23.0"
  },
  "dependencies": {
    "@ghtriage/schemas": "workspace:^",
    "@nestjs/common": "^11.1.6",
    "@nestjs/core": "^11.1.6",
    "@nestjs/platform-express": "^11.1.6",
    "@octokit/app": "^16.1.1",
    "@octokit/auth-app": "^8.1.1",
    "@ts-rest/core": "^3.45.0",
    "@ts-rest/open-api": "^3.52.1",
    "dotenv": "^17.2.3",
    "express": "^4.19.2",
    "ioredis": "^5.8.1",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "zod": "^3.25.76"
  },
  "engines": {
    "node": ">=20.19.0 <21"
  },
  "type": "module"
}