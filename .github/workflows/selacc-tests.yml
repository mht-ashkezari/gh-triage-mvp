# .github/workflows/selacc-tests.yml
name: SELACC Tests
on:
  pull_request:
    branches: [main]
    paths:
      - "tests/selacc*.spec.ts"
      - "apps/bff/src/**"
      - "docs/access/**"
      - "docs/selection/**"
      - "package.json"
      - "pnpm-lock.yaml"
  workflow_dispatch: {}

jobs:
  selacc-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Enable Corepack BEFORE setup-node when using cache: pnpm
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: "20.19.0"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - run: corepack prepare pnpm@9.12.0 --activate
      - run: pnpm i --frozen-lockfile
      - run: pnpm test:selacc:unit

  selacc-e2e:
    runs-on: ubuntu-latest
    env:
      SELACC_APP_MODULE_PATH: apps/bff/src/app.module
      GITHUB_WEBHOOK_SECRET: testsecret
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ghtriage
    services:
      postgres:
        image: postgres:16
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ghtriage
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      # Enable Corepack BEFORE setup-node when using cache: pnpm
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: "20.19.0"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - run: corepack prepare pnpm@9.12.0 --activate
      - run: pnpm i --frozen-lockfile
      - name: Prepare DB schema
        run: |
          psql "$DATABASE_URL" -f infra/sql/002_ghapp.sql || true
          psql "$DATABASE_URL" -c '\dt'
      - run: pnpm test:selacc:e2e
