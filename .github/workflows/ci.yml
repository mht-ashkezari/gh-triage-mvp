name: CI

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/img/**"
      - "docs/api/**"
      - "docs/site-docs.zip"
      - "datasets/snapshots/**"
  push:
    branches: [main]
    paths-ignore:
      - "docs/img/**"
      - "docs/api/**"
      - "docs/site-docs.zip"
      - "datasets/snapshots/**"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  baseline:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/ghtriage
      GITHUB_WEBHOOK_SECRET: testsecret
    services:
      postgres:
        image: postgres:16
        ports: ["127.0.0.1:5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ghtriage
        options: >-
          --health-cmd "pg_isready -h 127.0.0.1 -U postgres -d ghtriage"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure main exists for Turbo filter
        run: git fetch origin main:refs/remotes/origin/main --depth=1 || true

      - name: Setup Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Repo layout check
        run: pnpm repo:layout:check

      - name: Lint
        run: pnpm lint

      - name: Prebuild schemas (fix TS2307 workspace resolution)
        run: pnpm -F @ghtriage/schemas build

      - name: Typecheck
        run: pnpm typecheck

      - name: Build changed graph
        run: pnpm build
      - name: Wait for Postgres (service container, IPv4)
        shell: bash
        env:
          PGPASSWORD: postgres
        run: |
          set -euo pipefail
          echo "Waiting for Postgres on 127.0.0.1:5432/ghtriage as postgres..."
          for i in {1..60}; do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres -d ghtriage && break
            sleep 1
          done

      - name: Prepare DB schema (installations/repos)
        shell: bash
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }} # e.g. postgresql://postgres:postgres@127.0.0.1:5432/ghtriage
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f infra/sql/002_ghapp.sql
          echo "== Relations =="
          psql "$DATABASE_URL" -c '\dt'
      - name: KPI Schema + Validation
        run: pnpm vitest run --config vitest.ci.config.ts

      - name: Tests (fast) with coverage
        run: pnpm ci:test

      - name: Coverage summary (markdown)
        run: node tooling/ci/coverage-summary.mjs >> $GITHUB_STEP_SUMMARY || true
