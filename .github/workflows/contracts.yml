name: Contracts

on:
  pull_request:
    branches: [main]
    paths:
      - "packages/contracts/**"
      - "packages/schemas/**"
      - "docs/openapi/**"
      - "docs/jsonschema/**"
      - "redocly.yaml"
      - ".github/workflows/contracts.yml"
  push:
    branches: [main]
    paths:
      - "packages/contracts/**"
      - "packages/schemas/**"
      - "docs/openapi/**"
      - "docs/jsonschema/**"
      - "redocly.yaml"
      - ".github/workflows/contracts.yml"

permissions:
  contents: read

concurrency:
  group: contracts-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-contracts:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    env:
      ACT: ${{ secrets.ACT}}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false

      - name: Install dependencies (non-frozen until lockfile synced)
        run: pnpm install --no-frozen-lockfile

      - name: Build schema & contracts packages
        run: |
          pnpm -F @ghtriage/schemas build
          pnpm -F @ghtriage/contracts build

      - name: Generate OpenAPI + JSON Schema
        run: |
          pnpm contracts:openapi
          pnpm contracts:jsonschema

      - name: Lint OpenAPI (Redocly)
        run: pnpm contracts:lint

      - name: Require ADR on contract change
        if: ${{ hashFiles('tooling/ci/require-adr-on-contract-change.sh') != '' }}
        run: bash tooling/ci/require-adr-on-contract-change.sh

      - name: Start Postgres for tests
        uses: docker://postgres:15
        with:
          options: >-
            -e POSTGRES_PASSWORD=devpass
            -p 5432:5432

      - name: Run contract/unit tests
        env:
          DATABASE_URL: postgresql://postgres:devpass@localhost:5432/ghtriage
        run: |
          psql $DATABASE_URL -c 'CREATE DATABASE ghtriage;'
          pnpm ci:test

      - name: Run contract/unit tests
        run: pnpm ci:test

      - name: Upload contract artifacts
        if: ${{ env.ACT == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: contracts-artifacts-${{ github.sha }}
          path: |
            docs/openapi/*.openapi.json
            docs/jsonschema/*.schema.json
          if-no-files-found: error
          retention-days: 7
